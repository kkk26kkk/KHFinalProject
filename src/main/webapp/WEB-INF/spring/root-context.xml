<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
  <!-- Root Context: defines shared resources visible to all other web components -->
  <bean class="org.apache.commons.dbcp.BasicDataSource"
  		id="dataSource"
  		destroy-method="close">
    <property name="driverClassName"
    		  value="oracle.jdbc.driver.OracleDriver"/>
    <property name="url"
    		  value="jdbc:oracle:thin:@oracle11gr2.c4dm91vxvoll.ap-northeast-2.rds.amazonaws.com:1521:kkk26kkk"/>
    <property name="username" value="scott"/>
    <property name="password" value="rhkgkr11"/>
  </bean>

<!--   <bean class="org.apache.commons.dbcp.BasicDataSource" -->
<!--   		id="dataSource" -->
<!--   		destroy-method="close"> -->
<!--     <property name="driverClassName" -->
<!--     		  value="oracle.jdbc.driver.OracleDriver"/> -->
<!--     <property name="url" -->
<!--     		  value="jdbc:oracle:thin:@localhost:1521:xe"/> -->
<!--     <property name="username" value="scott"/> -->
<!--     <property name="password" value="tiger"/> -->
<!--   </bean> -->
  
  <!-- 쿼리 로그 출력 위한 추가 -->
<!--   <bean class="org.apache.commons.dbcp.BasicDataSource" -->
<!--   		id="dataSourceSpied" -->
<!--   		destroy-method="close"> -->
<!--     <property name="driverClassName" -->
<!--     		  value="oracle.jdbc.driver.OracleDriver"/> -->
<!--     <property name="url" -->
<!--     		  value="jdbc:oracle:thin:@localhost:1521:xe"/> -->
<!--     <property name="username" value="scott"/> -->
<!--     <property name="password" value="tiger"/> -->
<!--   </bean> -->
  
<!--   <bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource"> -->
<!--   	<constructor-arg ref="dataSourceSpied"/> -->
<!--   	<property name="logFormatter"> -->
<!--   		<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter"> -->
<!--   			<property name="loggingType" value="MULTI_LINE"/> -->
<!--   			<property name="sqlPrefix" value="SQL	: "/> -->
<!--   		</bean> -->
<!--   	</property> -->
<!--   </bean> -->
  <!-- 쿼리 로그 출력 위한 추가 끝-->
  
  <bean class="org.mybatis.spring.SqlSessionFactoryBean"
  		id="sqlSession">
  	<property name="dataSource" ref="dataSource"/>
  	<property name="configLocation" value="classpath:util/SqlMapConfig.xml"/>
    <property name="mapperLocations" value="classpath*:sql/*.xml"/>
  </bean>
  
  <!-- SqlSessionTemplate은 필요한 시점에 세션을 닫고 커밋하거나
  		롤백하는 것을 포함한 세션의 생명 주기를 관리합니다. -->
  <bean class="org.mybatis.spring.SqlSessionTemplate"
  		id="sqlSessionTemplate">
	<constructor-arg ref="sqlSession" index="0"/>
  </bean>

  <bean id="multipartResolver"
    	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!-- 1024 * 1024 * 10 bytes : 10MB -->
    <property name="maxUploadSize" value="10485760"/>  
  </bean>
  <!-- 
  		maxUploadSize : 한 번의 Request로 전달될 수 있는 최대의 크기를 의미합니다.
  	  	name="maxUploadSize"를 지정하지 않으면 기본으로 "-1" 설정되는데 파일 크기가
  	        최대 업로드 가능한 바이트 크기, -1은 제한이 없음을 의미, 기본값은 -1 
   -->
   
  <!-- 메일 보내기 -->
  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	<property name="host" value="smtp.naver.com" />
	<property name="port" value="587" />
	<property name="username" value="kkk26kkk@naver.com" />
	<property name="password" value="wngud123!@" />
	
	
  <!-- email 요청시는 SMTP -->
    <property name="javaMailProperties">
	  <props>
	    <prop key="mail.transport.protocol">smtp</prop>
	    <prop key="mail.smtp.auth">true</prop>
   	    <prop key="mail.smtp.starttls.enable">true</prop>
	    <prop key="mail.debug">true</prop>
      </props>
	</property>
  </bean>
</beans>
